<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>mapper</name>
	<filePath>src/main/resources/mappings/${lastPackageName}/${moduleName}/${subModuleName}</filePath>
	<fileName>${ClassName}Dao.xml</fileName>
	<content><![CDATA[
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.${moduleName}.dao<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Dao">
    
    <#-- 通用查询字段SQL -->
	<sql id="publicColumns">
		a.id as "id",
		a.remark as "remark",
		a.is_enable as "isEnable",
		a.create_by as "createBy",
		a.create_date as "createDate",
		a.update_by as "updateBy",
		a.update_date as "updateDate",
		a.order_no as "orderNo",
		a.del_flag as "delFlag"
	</sql>
	
	<#-- 新增通用字段SQL -->
	<sql id="insertColumns">
		remark,
		is_enable,
		order_no, 
		del_flag,
		create_by,
		create_date
	</sql>
	
	<#-- 新增通用关联字段SQL -->
	<sql id="insertValue">
		${"#"}{remark},
		${"#"}{isEnable},
		${"#"}{orderNo},
		0,
		${"#"}{createBy},
		${"#"}{createDate}
	</sql>
	
	<#-- 修改通用字段SQL -->
    <sql id="updateColumns">
    	,remark = ${"#"}{remark}
		,is_enable = ${"#"}{isEnable}
		,order_no = ${"#"}{orderNo}
		,update_by = ${"#"}{updateBy}
		,update_date = ${"#"}{updateDate}
    </sql>
    
    <#-- 通用查询SQL -->
    <sql id="publicWhereSql">
    </sql>
    
    <#-- 通用查询SQL -->
	<sql id="publicSelect">
	</sql>
    
    <#-- 输出字段列 -->
	<sql id="${className}Columns">
		<#assign columnField>
			<#list table.columnList as c>
		a.${c.name} AS "${c.javaFieldId}",
			</#list>
			<#list table.columnList as c>
				<#if c.showType?? && c.showType == "userselect">
					<#list c.javaFieldAttrs as a>
		u${c_index + 1}.${a[1]} AS "${c.simpleJavaField}.${a[0]}",
					</#list>
				<#elseif c.showType?? && c.showType == "officeselect">
					<#list c.javaFieldAttrs as a>
		o${c_index + 1}.${a[1]} AS "${c.simpleJavaField}.${a[0]}",
					</#list>
				<#elseif c.showType?? && c.showType == "areaselect">
					<#list c.javaFieldAttrs as a>
		a${c_index + 1}.${a[1]} AS "${c.simpleJavaField}.${a[0]}",
					</#list>
				</#if>
				<#-- 父表关联字段 -->
				<#if table.parentExists && table.parentTableFk == c.name>
					<#list c.javaFieldAttrs as a>
		b.${a[1]} AS "${c.simpleJavaField}.${a[0]}",
					</#list>
				</#if>
			</#list>
		</#assign>
${columnField?substring(0, columnField?last_index_of(","))}
	</sql>
	
	<#-- 输出字段关联表 -->
	<sql id="${className}Joins">
		<#-- 关联父表 -->
		<#if table.parentExists>
		LEFT JOIN ${table.parent.name} b ON b.id = a.${table.parentTableFk}
		</#if>
		<#-- 关联系统表 -->
		<#list table.columnList as c>
			<#if c.showType?? && c.showType == "userselect">
		LEFT JOIN sys_user u${c_index + 1} ON u${c_index + 1}.id = a.${c.name}
			<#elseif c.showType?? && c.showType == "officeselect">
		LEFT JOIN sys_office o${c_index + 1} ON o${c_index + 1}.id = a.${c.name}
			<#elseif c.showType?? && c.showType == "areaselect">
		LEFT JOIN sys_area a${c_index + 1} ON a${c_index + 1}.id = a.${c.name}
			</#if>
		</#list>
	</sql>
    
	<#-- 根据主键获取持久层信息  -->
	<select id="get" resultType="${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}">
		SELECT <include refid="${className}Columns"/>,<include refid="publicColumns"/> FROM ${table.name} a <include refid="${className}Joins"/> WHERE a.id = ${"#"}{id} and a.del_flag = 0
	</select>
	
	<#-- 依据持久层获取分页信息   -->
	<select id="findList" resultType="${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}">
		select <include refid="${className}Columns" />,<include refid="publicColumns"/> from ${table.name} a <include refid="${className}Joins" />
		<include refid="publicWhereSql"/> <include refid="publicSelect"/>
	</select>
	
	<#-- 依据持久层获取分页总数   -->
	<select id="getCountPage" resultType="int" parameterType="${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}">
		select count(*) from ${table.name} a <include refid="${className}Joins" /> <include refid="publicWhereSql"/> 
	</select>
	
	<#-- 获得全部信息   -->
	<select id="getAllList" resultType="${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}">
		select <include refid="${className}Columns" />,<include refid="publicColumns"/> from ${table.name} a <include refid="${className}Joins"/> where a.del_flag = 0 and a.is_enable = 1 order by a.order_no desc
	</select>
	
	<insert id="insert">
		INSERT INTO ${table.name}(
		<#assign insertField>
			<#list table.columnList as c>
				<#if c.isInsert?? && c.isInsert == "1">
			${c.name},
				</#if>
			</#list>
		</#assign>
${insertField?substring(0, insertField?last_index_of(","))}
		) VALUES (
		<#assign insertJavaField>
			<#list table.columnList as c>
				<#if c.isInsert?? && c.isInsert == "1">
			${"#"}{${c.javaFieldId}},
				</#if>
			</#list>
		</#assign>
${insertJavaField?substring(0, insertJavaField?last_index_of(","))}
		)
	</insert>
	
	<update id="update">
		UPDATE ${table.name} SET 	
			<#assign updateField>		
				<#list table.columnList as c>
					<#if c.isEdit?? && c.isEdit == "1">
			${c.name} = ${"#"}{${c.javaFieldId}},
					</#if>
				</#list>
			</#assign>
${updateField?substring(0, updateField?last_index_of(","))}
		WHERE id = ${"#"}{id}
	</update>
	
</mapper>]]>
	</content>
</template>